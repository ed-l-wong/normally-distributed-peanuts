/*
Euler 2.
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
*/

#include <iostream>
using namespace std;

void problem() {
  cout << "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms." << endl;
}

int naive_method() {
  int total = 0;
  int current = 1;
  int next = 2;
  int tmp;
  while(true) {
    if (current%2==0) {
      total += current;
    }
    if (current > 4000000) {
      break;
    } else {
      tmp = next;
      next = next + current;
      current = tmp;
    }
  }
  return total;
}


int main() {
  problem();
  cout << "The answer is: " << naive_method() << endl;
}
